spring:
  application:
    name: ecommerce-app
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:465}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    default-encoding: UTF-8
    test-connection: false
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          ssl:
            enable: true
          starttls:
            enable: false
          connectiontimeout: 15000
          timeout: 15000
          writetimeout: 15000
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/ecommerce}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:appuser}
    password: ${DB_PASSWORD:newpassword}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
    open-in-view: false
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:pkc-xxxxx.us-central1.gcp.confluent.cloud:9092}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_API_KEY:HY73KJWRYPKUYWGO}" password="${KAFKA_API_SECRET:cfltDPWESa093bLUOLoRAJP+M/1uBkCZ6HmgHB+tTUXPIXYcTW/GcjF4KvqGkyCg}";
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
      file-size-threshold: 2KB

jwt:
  issuer: ${JWT_ISSUER:sky-ecommerce}
  secret: ${JWT_SECRET}
  access-token:
    ttl: 15m
  refresh-token:
    ttl: 7d

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

topics:
  order-events: ${ORDER_EVENTS_TOPIC:order.events}
  payment-events: ${PAYMENT_EVENTS_TOPIC:payment.events}
  inventory-events: ${INVENTORY_EVENTS_TOPIC:inventory.events}
  notification-events: ${NOTIFICATION_EVENTS_TOPIC:notification.events}

outbox:
  relay:
    interval-ms: 1000

app:
  frontend:
    resetBaseUrl: ${FRONTEND_RESET_BASE_URL:http://localhost:3000/reset?token=}

logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: INFO
    com.sky_ecommerce: DEBUG
    org.springframework.mail: DEBUG
    com.sun.mail: DEBUG
    jakarta.mail: DEBUG

cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

paystack:
  base-url: ${PAYSTACK_BASE_URL:https://api.paystack.co}
  public-key: ${PAYSTACK_PUBLIC_KEY}
  secret-key: ${PAYSTACK_SECRET_KEY}
  callback-url: ${PAYSTACK_CALLBACK_URL:https://example.com}
